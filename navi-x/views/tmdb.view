#import "common.view"

widget(container_x, {
	widget(container_y, {
		// Left side
		padding: $ui.width / 35;
		spacing: 15;

		widget(container_x, {
			// Cover and details
			widget(container_y, {
				width: $ui.width * 1/7;
				widget(image, {
					source: $page.model.metadata.logo;
					height: $ui.height * 2/5;
					align: topLeft;
					aspectConstraint: true;

					widget(frontdrop, {
						source: "img/boxart-overlay-blue.png";
						alpha: 0.4;
					});
				});
			});

			widget(container_y, {
				// Details
				widget(container_x, {
					height: 10;
				});

				widget(label, {
					caption: $page.model.metadata.title;
					TextStyleItem();
					//bold: true;
					color: select(isFocused(), 1, 0.5);
					sizeScale: 1.8;
				});

				widget(label, {
					hidden: !($page.model.metadata.original_title);
					caption: "a.k.a " + $page.model.metadata.original_title;
					TextStyleItem();
					//bold: true;
					color: select(isFocused(), 1, 0.5);
					sizeScale: 1.4;
				});

				widget(container_x, {
					height: 20;
				});

				filterConstraintY: true;
				filterConstraintX: true;
				spacing: 4;
				cloner($page.model.nodes, loader, {
					source: "itemviews/" + $self.type + ".view";
				});
			});
		});

		widget(container_y, {
			// Description
			widget(label, {
				width: $ui.width * 3/5;
				TextStyleItem();
				sizeScale: 1.1;
				caption: $page.model.metadata.description;
				maxlines: 10;
				align:justified;
				color: 0.8;
			});
		});

		widget(container_y, {
			// Action Buttons
			spacing: 4;
			&view.focused = focusedChild();

			cloner($page.model.actions, container_z, {
				focusable: true;
				widget(container_x, {
				widget(image, {
					.color = 0.9;
					.source = "img/cursor.png";

					.alpha = isHovered() * 0.9 + isFocused() * 1.0 + isPressed() * 0.8;
					.saturation = 1 - iir(isReady(), 10);
					align: left;
					width: $ui.width / 30;
				});

				widget(label, {
					padding: [5, 0];
					caption: $self.metadata.title;
					TextStyleItem();
					color: select(isFocused(), 0.8, 0.5);
					align: left;

					onEvent(activate,
						translate($self.type, void,
							"pageevent", deliverEvent($page.eventSink, $self.data),
							"navopen", navOpen($self.url)
					));
				});
				});
			});
		});
	});

	widget(container_y, {
		// Right Side
		padding: 5;

		// Array view
		widget(container_y, {
			hidden: !($view.focused.metadata.type == "array");
			padding: 5;
			widget(label, {
				.color = 0.8;
				.caption = "Currently selected: " + $clone.focused.title;
				.ellipsize = true;
				shadow: true;
				.maxlines = 1;
			});

			widget(backdrop, {
				source: "img/boxart-overlay-blue.png";
				alpha: 0.8;

				widget(array, {
					$view.sizer = int(getWidth() / 100);

					&clone.focused = focusedChild();
					.id = "array";
					.border = $view.sizer * 3;
					.Xspacing = $view.sizer;
					.Yspacing = $view.sizer;
					.childTilesX = $view.focused.metadata.childTilesX;
					.childTilesY = $view.focused.metadata.childTilesY;
	  
					cloner( $view.focused.metadata.array, displacement, {
						.focusable = true;
						.focusOnClick = true;
						.padding = $view.sizer * -1.5 * iir(isHovered() || isFocused(), 3) + $view.sizer * iir(isPressed(), 3);

						onEvent(activate, select($ui.fancyAnimations,
							navOpen($self.url, void, $self, $parent.model),
							navOpen($self.url, void, void, $parent.model)));
						widget(container_y, {
							.spacing = 5;
							padding: 10;
							widget(detachable, {
								widget(container_z, {
										widget(container_y, {
											align: top;
											border: 8;
											margin: -4;

											widget(image, {
												.color = 0.5 + isHovered() * 0.4 + isFocused() * 0.4 + isPressed() * 0.4;
												.source = $self.image;

												.alpha = iir(isReady(), 10);
												.saturation = 1 - iir(isReady(), 10);
											});
									});
								});
							});
							widget(label, {
								.color = 0.7 + isHovered() * 0.4 + isFocused() * 0.4 + isPressed() * 0.4;
								.caption = $self.title;
								sizeScale: 0.7 + 0.3 * isFocused();
								.align = center;
								.ellipsize = true;
								.shadow = true;
							});
						});
					});
				});	  
			});
		});

		// Bodytext view
		widget(container_x, {
			hidden: !($view.focused.metadata.type == "bodytext");
			padding: 5;
			
			widget(backdrop, {
				source: "img/boxart-overlay-blue.png";
				alpha: 0.7;

				widget(list_y, {
					.id = "list";
					widget(label, {
						.padding = [20, 20];
						.sizeScale = 0.9;
						.caption = $view.focused.metadata.body;
						align: justified;
						maxlines: 50;
					});
				});
			});
		});
	});

	widget(container_x, {
		.hidden = ($view.focused.metadata.type == "bodytext");
		LIST_Y_SLIDER("array");
	});

    widget(container_x, {
		.hidden = !($view.focused.metadata.type == "bodytext");
		.focusable = true;
		.focusOnClick = true;
		LIST_Y_SLIDER("list");
	});
});